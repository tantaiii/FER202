const companies = [
    { name: "Company One", category: "Finance", start: 1981, end: 2003 },
    { name: "Company Two", category: "Retail", start: 1992, end: 2008 },
    { name: "Company Three", category: "Auto", start: 1999, end: 2007 },
    { name: "Company Four", category: "Retail", start: 1989, end: 2010 },
    { name: "Company Five", category: "Technology", start: 2009, end: 2014 },
    { name: "Company Six", category: "Finance", start: 1987, end: 2010 },
  ];
  
  // T·∫°o b·∫£n sao ƒë√£ sort theo end tƒÉng d·∫ßn (kh√¥ng mutate m·∫£ng g·ªëc)
  const sortedCompanies = [...companies].sort((a, b) => a.end - b.end);
  
  // C·∫Øt l·∫•y 3 c√¥ng ty ƒë·∫ßu
  const top3 = sortedCompanies.slice(0, 3);
  
  // In ra theo ƒë·ªãnh d·∫°ng "Company - EndYear"
  top3.forEach(c => console.log(`${c.name} - ${c.end}`));

  
  
  // üîπ Spread ƒë·ªÉ t·∫°o object m·ªõi (b·∫•t bi·∫øn)
  const company0New = { 
    ...companies[0],     // copy to√†n b·ªô thu·ªôc t√≠nh
    start: companies[0].start + 1 // ghi ƒë√® start + 1
  };
  
  // üîπ Rest ƒë·ªÉ gom m·∫£ng tham s·ªë th√†nh 1 bi·∫øn arrays
  function concatAll(...arrays) {
    return arrays.flat();   // g·ªôp c√°c m·∫£ng con th√†nh 1 m·∫£ng
  }
  
  // üñ®Ô∏è In ra k·∫øt qu·∫£
  console.log("companies[0] =", companies[0]);
  console.log("company0New =", company0New);
  
  console.log("concatAll([1,2],[3],[4,5]) =", concatAll([1,2],[3],[4,5]));
  const ages = [12, 17, 20, 25, 15, 32, 40, 18, 19, 22];

// D√πng reduce ƒë·ªÉ t√≠nh to√°n t·ªïng, min, max, v√† bucket
const result = ages.reduce(
  (acc, age) => {
    // c·ªông d·ªìn t·ªïng
    acc.total += age;

    // c·∫≠p nh·∫≠t min, max
    if (age < acc.min) acc.min = age;
    if (age > acc.max) acc.max = age;

    // ph√¢n lo·∫°i bucket
    if (age >= 13 && age <= 19) {
      acc.buckets.teen++;
    } else if (age >= 20) {
      acc.buckets.adult++;
    }

    return acc;
  },
  {
    total: 0,
    min: Infinity,
    max: -Infinity,
    buckets: { teen: 0, adult: 0 }
  }
);

// üñ®Ô∏è In k·∫øt qu·∫£
console.log(`Total: ${result.total}, Min: ${result.min}, Max: ${result.max}`);
console.log("Buckets:", result.buckets);
  
  